name: Build Windows / MSVC / CMake
description: Build a Windows plugin with MS Visual Studio based on a CMake setup
author: TwinFan

inputs:                       
  pluginName:
    description: "Plugin's name, used both as top-level folder name and as file name as required by X-Plane"
    required: true
  archFolder:
    description: "Subfolder in which the executable is placed, is based on architecture like 'win_x64'"
    required: true
    default: win_x64
  flags:
    description: "Flags to be passed to CMake"
    required: false

outputs:
  xpl-file-name:
    description: Path to the resulting xpl file
    value: ${{ steps.return.outputs.xpl-file-name }}
  pdb-file-name:
    description: Path to the resulting pdb file (debug symbol info)
    value: ${{ steps.return.outputs.pdb-file-name }}

runs:
  using: "composite"
  steps:
  - name: Build
    shell: cmd
    run: ${{ github.action_path }}\build-win.cmd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise" build-win "${{ inputs.flags }}"
  - name: Test for Target
    shell: bash
    env:
      TARGET_XPL: build-win/${{ inputs.archFolder }}/${{ inputs.pluginName }}.xpl
    run: |
      if [[ ! -f "$TARGET_XPL" ]]; then
        echo Expected target build not found: "$TARGET_XPL"
        exit 1
      fi
  - name: Return Value
    id: return
    shell: bash
    env:
      TARGET_XPL: build-win/${{ inputs.archFolder }}/${{ inputs.pluginName }}.xpl
      TARGET_PDB: build-win/${{ inputs.archFolder }}/${{ inputs.pluginName }}.pdb
    run: |
      echo "xpl-file-name=$(echo $TARGET_XPL)" >> $GITHUB_OUTPUT
      echo "pdb-file-name=$(echo $TARGET_PDB)" >> $GITHUB_OUTPUT
